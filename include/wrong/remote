#pragma once

#include <string>
#include <filesystem>
#include <iostream>

namespace wrong { namespace remote {

class base
{
public:
	virtual ~base () { }

	/*! The absolute path to the fetched remote.
	 */
	virtual std::filesystem::path path () const = 0;

	/*! Fetch the remote.
	 */
	virtual int fetch () = 0;
};

/*! Nothing to fetch.
 */
class none final : public virtual base
{
public:
	std::filesystem::path
	path () const
	{
		return "";
	}

	int
	fetch ()
	{
		return 0;
	}
};

class http final : public virtual base
{
public:
	std::filesystem::path
	path () const
	{
		return "";
	}

	int
	fetch ()
	{
		return 0;
	}
};

class git final : public virtual base
{
public:
	std::filesystem::path
	path () const
	{
		return "";
	}

	int
	fetch ()
	{
		return 0;
	}

public:
	/*! Define the remote URL for the repository.
	 */
	git&
	url (std::string url)
	{
		_url = url;
		return *this;
	}

private:
	/*! The URL to the remote repository.
	 */
	std::string _url;
};

} }
