#pragma once

#include <wrong/builder/base>

#include <wrong/files>
#include <wrong/flags>

namespace wrong { namespace builder {

class compile final : public virtual base
{
public:
	int
	build (std::filesystem::path path)
	{
		return 0;
	}

	int
	use (std::filesystem::path path, flags& flags)
	{
		return 0;
	}

public:
	compile&
	files (class files paths)
	{
		_files = paths;
		return *this;
	}

	class files&
	files ()
	{
		return _files;
	}

private:
	class files _files;
};

} }
